format:
  - dart format lib .
  - dart run import_sorter:main
  - flutter format lib

build: dart run build_runner build --delete-conflicting-outputs

watch: dart run build_runner watch --delete-conflicting-outputs

gen:
  - dart run build_runner build
  - Spider build
  - dart run easy_localization:generate -S assets/translations -O lib/generated -f keys -o locale_keys.dart

clean:
  - flutter clean
  - flutter pub get

localization: dart run easy_localization:generate -S assets/translations -O lib/generated -f keys -o locale_keys.dart

######################## ANDROID BUILD #########################
pre_build_android:
  - rm -Rf build
  - $clean
  - $gen

build_android_stg:
  (description): for building Staging Android app
  (scripts):
    - $pre_build_android
    - flutter build apk --flavor staging --release -t lib/main_staging.dart
    - cd build/app/outputs/flutter-apk && open .

build_android_prod:
  (description): for building Production Android app
  (scripts):
    - $pre_build_android
    - flutter build appbundle --flavor production --release -t lib/main_production.dart
    - cd build/app/outputs/bundle/prodRelease && open .
################################################################

######################## IOS BUILD #########################
pre_build_ios:
  - rm -Rf build
  - $clean
  - rm -Rf ios/Pods
  - rm -Rf ios/.symlinks
  - rm -Rf ios/Flutter/Flutter.framework
  - rm -Rf ios/Flutter/Flutter.podspec
  - $gen
  - cd ios || exit
  - pod install
  - cd ..

build_ios_stg:
  (description): for building Staging IOS app
  (scripts):
    - $pre_build_ios
    - flutter build ipa --flavor staging --release --target lib/main_staging.dart
    - cd build/ios && open .

build_ios_prod:
  (description): for building Production IOS app
  (scripts):
    - $pre_build_ios
    - flutter build ipa --flavor production --release --target lib/main_production.dart
    - cd build/ios && open .
################################################################
